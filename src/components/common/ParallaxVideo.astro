---
import Section from "./Section.astro";
import TextBlock from "./TextBlock.astro";
import ParallaxMedia from "./ParallaxMedia.astro";

interface Props {
  subtitle: string;
  title: string;
  description: string;
  videoSrc: string;
  posterSrc?: string;
  alignment?: "left" | "center" | "right";
  textColor?: string;
  buttonHref?: string;
  buttonSize?: "small" | "medium" | "large";
  buttonVariant?: "primary" | "secondary" | "accent";
  buttonText?: string;
  buttonColor?: string;  headingLevel?: 1 | 2 | 3 | 4 | 5 | 6;
  videoDescription?: string;
  preload?: string;
  isHero?: boolean; // New prop to determine if this is the main hero section
}

const { 
  subtitle, 
  title, 
  description, 
  videoSrc, 
  posterSrc, 
  alignment = "center",
  textColor = "white",
  buttonHref, 
  buttonSize, 
  buttonVariant, 
  buttonText,
  buttonColor,  headingLevel = 1,
  videoDescription,
  preload,
  isHero = false
} = Astro.props;
---

<Section
  padding="large"
  width="full"
  height="h-screen"
  id="hero-parallax-section"
  class="relative overflow-hidden"
  role="region"
  ariaLabel={isHero ? "Hero-Bereich mit Hintergrundvideo" : "Video-Bereich"}
>
  <div 
    class="absolute inset-0 w-full h-full parallax-container"
    role="img" 
    aria-label={videoDescription || "Hintergrundvideo zur visuellen Darstellung unserer Dienstleistungen"}
  >    <ParallaxMedia 
      type="video" 
      src={videoSrc}
      posterSrc={posterSrc}
      preload={preload}
    />
  </div>
  <div class="relative z-10 container mx-auto h-full flex items-center justify-center lg:justify-start">
    <div class="w-full max-w-3xl lg:max-w-none sm:text-center sm:align-center lg:w-2/5 px-4 text-center lg:text-left">
      <TextBlock
        subtitle={subtitle}
        title={title}
        descriptionBold={description}
        alignment={alignment}
        textColor={textColor}
        buttonText={buttonText}
        buttonVariant={buttonVariant}
        buttonSize={buttonSize}
        buttonHref={buttonHref}
        headingLevel={headingLevel}
        useSemanticHeadings={true}
      />
    </div>
  </div>
</Section>
