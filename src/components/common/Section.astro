---
type BackgroundType = "white" | "primary" | "primaryLight" | "accent" | "transparent";
type PaddingType = "none" | "xs" | "small" | "medium" | "large" | "xl";
type WidthType = "full" | "wide" | "medium" | "narrow";
type AnimationType = "fade-in" | "slide-in" | "zoom-in" | "grid-in" | "parallax" | "none";

interface Props {
  background?: BackgroundType;
  padding?: PaddingType;
  width?: WidthType;
  height?: string;
  class?: string;
  id?: string;
  animation?: AnimationType;
  ariaLabel?: string;
  ariaLabelledBy?: string;
  role?: "region" | "banner" | "main" | "contentinfo" | "navigation" | "complementary";
}

const {
  background = "white",
  padding = "medium",
  width = "full",
  height = "100",
  class: className,
  id,
  animation = "none",
  ariaLabel,
  ariaLabelledBy,
  role,
  ...props
} = Astro.props;

const backgroundClasses: Record<BackgroundType, string> = {
  white: "bg-white",
  primary: "bg-primary-700",
  primaryLight: "bg-primary-50",
  accent: "bg-accent-500",
  transparent: "bg-transparent",
};

const paddingClasses: Record<PaddingType, string> = {
  none: "",
  xs: "py-spacing-2 px-spacing-2 sm:py-spacing-2 sm:px-spacing-4 md:py-spacing-3 md:px-spacing-6 lg:py-spacing-3 lg:px-spacing-6 xl:py-spacing-4 xl:px-spacing-8 2xl:py-spacing-4 2xl:px-spacing-8",
  small: "py-spacing-3 px-spacing-3 sm:py-spacing-5 sm:px-spacing-7 md:py-spacing-6 md:px-spacing-8 lg:py-spacing-7 lg:px-spacing-9 xl:py-spacing-8 xl:px-spacing-10 2xl:py-spacing-9 2xl:px-spacing-11",
  medium: "py-spacing-6 px-spacing-4 sm:py-spacing-10 sm:px-spacing-8 md:py-spacing-12 md:px-spacing-10 lg:py-spacing-14 lg:px-spacing-12 xl:py-spacing-16 xl:px-spacing-14 2xl:py-spacing-18 2xl:px-spacing-16",
  large: "py-spacing-8 px-spacing-4 sm:py-spacing-16 sm:px-spacing-8 md:py-spacing-20 md:px-spacing-10 lg:py-spacing-24 lg:px-spacing-12 xl:py-spacing-28 xl:px-spacing-14 2xl:py-spacing-32 2xl:px-spacing-16",
  xl: "py-spacing-10 px-spacing-4 sm:py-spacing-20 sm:px-spacing-8 md:py-spacing-24 md:px-spacing-10 lg:py-spacing-28 lg:px-spacing-12 xl:py-spacing-32 xl:px-spacing-14 2xl:py-spacing-36 2xl:px-spacing-16",
};

const widthClasses: Record<WidthType, string> = {
  full: "w-full",
  wide: "w-full max-w-container mx-auto px-spacing-2 sm:px-spacing-6 lg:px-spacing-8",
  medium: "w-full max-w-content mx-auto px-spacing-2 sm:px-spacing-6 lg:px-spacing-8",
  narrow: "w-full max-w-prose mx-auto px-spacing-2 sm:px-spacing-6 lg:px-spacing-8",
};

const animationClass = animation !== "none" ? `${animation} animate-on-scroll` : "";

const innerClasses = [
  paddingClasses[padding],
  widthClasses[width],
  "transition-all duration-transition-normal ease-transition-default will-change-auto",
  animationClass,
  className,
].filter(Boolean);
---

<section 
  id={id} 
  class:list={[backgroundClasses[background], "w-full", animationClass]}
  style={`min-height: ${height};`} 
  role={role}
  aria-label={ariaLabel}
  aria-labelledby={ariaLabelledBy}
  {...props}
>
  <div class:list={innerClasses}>
    <div class="w-full h-full flex flex-col justify-center">
      <slot />
    </div>
  </div>
</section>