---
interface Props {
  title: string;
  breadcrumbs: { label: string; url: string }[];
  backgroundImage: string;
  backgroundAlt?: string;
  headingLevel?: 1 | 2 | 3 | 4 | 5 | 6;
}

const { 
  title, 
  breadcrumbs, 
  backgroundImage, 
  backgroundAlt,
  headingLevel = 1 
} = Astro.props;

// Generate dynamic heading tag
const HeadingTag = `h${headingLevel}` as keyof JSX.IntrinsicElements;
---

<section
  class="relative py-16 bg-cover bg-center bg-no-repeat"
  style={`background-image: url(${backgroundImage});`}
  role="banner"
  aria-label={`Seitenbanner fÃ¼r ${title}`}
>
  <div 
    class="absolute inset-0 bg-black opacity-50"
    aria-hidden="true"
  ></div>
  <div class="container mx-auto px-4 relative z-10">
    <HeadingTag class="text-ag-h2 font-ag-h2 text-white mb-4">{title}</HeadingTag>
    <nav class="text-sm" aria-label="Breadcrumb-Navigation">
      <ol class="list-none p-0 inline-flex" role="list">
        {
          breadcrumbs.map((item, index) => (
            <li class="flex items-center" role="listitem">
              {index > 0 && <span class="mx-2 text-gray-300" aria-hidden="true">/</span>}
              <a
                href={item.url}
                class={
                  index === breadcrumbs.length - 1
                    ? "text-gray-300 text-body-text font-body-text"
                    : "text-white text-body-text font-body-text hover:text-gray-200 focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-black"
                }
                aria-current={index === breadcrumbs.length - 1 ? "page" : undefined}
              >
                {item.label}
              </a>
            </li>
          ))
        }
      </ol>
    </nav>
  </div>
  {backgroundAlt && (
    <div class="sr-only" aria-label={`Hintergrundbild: ${backgroundAlt}`}></div>
  )}
</section>
