---
import Button from "../common/Button.astro";
import Icon from "../common/Icon.astro";
import Logo from "./Logo.astro";
import Nav from "./Nav.astro";
import texts from "@/utils/texts.json";

const headerTexts = texts.header;

const NAVIGATION = [
  { name: headerTexts.nav.home, href: "/" },
  { name: headerTexts.nav.about, href: "/about" },
  { name: headerTexts.nav.services, href: "/services" },
  { name: headerTexts.nav.contact, href: "/contact" },
  { name: headerTexts.nav.faq, href: "/faq" },
];
---

<header role="banner">
  <!-- Top Contact Bar -->
  <nav role="navigation" aria-label="Kontaktinformationen">
    <div
      class="bg-gray-100 text-ag-body-text font-ag-body-text flex flex-col md:flex-row md:justify-between items-center mx-auto p-4"
    >
      <div class="flex gap-4">
        <a
          href="https://maps.app.goo.gl/UbA5eCbGWvF2pyPu9"
          class="hidden sm:flex items-center gap-2 text-center sm:text-left"
          aria-label="Adresse auf Google Maps öffnen"
        >          <Icon
            icons={[{ name: "mapMarker" }]}
            size="small"
            variant="default"
          />
          {headerTexts.address}
        </a>
        <a
          href={`tel:${headerTexts.phone}`}
          class="flex items-center gap-2 text-center sm:text-left"
          aria-label={`Anrufen: ${headerTexts.phone}`}
        >
          <Icon
            icons={[{ name: "phone", href: `tel:${headerTexts.phone}` }]}
            size="small"
            variant="default"
          />
          {headerTexts.phone}
        </a>
      </div>
      <div
        class="flex flex-col sm:flex-row items-center space-y-2 sm:space-y-0 sm:space-x-6 rtl:space-x-reverse mt-2 md:mt-0"
      >
        <div class="flex items-center gap-2">
          <Icon icons={[{ name: "clock" }]} size="small" variant="default" />
          {headerTexts.schedule}
        </div>
        <ul class="hidden sm:flex" role="list" aria-label="Social Media Links">
          <li class="space-x-2">
            <Icon
              icons={[
                { 
                  name: "facebook", 
                  href: headerTexts.socialLinks.facebook,
                  ariaLabel: "Facebook Seite besuchen"
                },
                {
                  name: "instagram",
                  href: headerTexts.socialLinks.instagram,
                  ariaLabel: "Instagram Profil besuchen"
                },
            ]}
              size="small"
              variant="default"
              touchSize="sm"
            />
          </li>
        </ul>
      </div>
    </div>
  </nav>
  <!-- Main Navigation -->
  <nav id="main-navigation" role="navigation" aria-label="Hauptnavigation">
    <div class="flex flex-wrap items-center justify-between mx-auto px-4 py-3 lg:px-6">
      <!-- Logo -->
      <a 
        href="/" 
        class="max-w-[200px] block transition-opacity duration-200 hover:opacity-80 focus:outline-none focus:ring-2 focus:ring-primary-900 focus:ring-offset-2 rounded-lg" 
        aria-label="Zur Startseite"
      >
        <Logo class="h-12 md:h-16 lg:h-20 max-w-fit" color="dark" />
      </a>

      <!-- Desktop CTA & Mobile Menu Toggle -->
      <div class="flex items-center md:order-2 space-x-3 md:space-x-4">
        <!-- Desktop CTA Button -->
        <Button 
          class="hidden sm:flex" 
          variant="primary" 
          size="medium"
          href={`tel:${headerTexts.phone}`}
          ariaLabel={`Jetzt anrufen: ${headerTexts.phone}`}
        >
          {headerTexts.buttonText}
        </Button>
        
        <!-- Enhanced Mobile Menu Toggle -->
        <button
          data-collapse-toggle="navbar-cta"
          type="button"
          class="inline-flex items-center justify-center w-touch-md h-touch-md text-text-secondary bg-surface-secondary hover:bg-surface-tertiary hover:text-text-primary rounded-lg md:hidden transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-primary-900 focus:ring-offset-2 focus:bg-surface-tertiary active:scale-95"
          aria-controls="navbar-cta"
          aria-expanded="false"
          aria-label="Hauptmenü öffnen"
        >
          <span class="sr-only">Hauptmenü öffnen</span>
          <!-- Hamburger Icon -->
          <svg
            class="w-6 h-6 transition-transform duration-200"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 17 14"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M1 1h15M1 7h15M1 13h15">
            </path>
          </svg>
        </button>
      </div>
      
      <!-- Navigation Menu -->
      <div
        class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1 transition-all duration-300"
        id="navbar-cta"
      >
        <Nav links={NAVIGATION} />
      </div>
    </div>
    
    <!-- Mobile Menu (Enhanced) -->
    <div 
      class="md:hidden"
      id="mobile-menu"
      style="display: none;"
    >
      <div class="px-4 pt-2 pb-4 space-y-1 bg-surface-secondary border-t border-border-primary">
        {NAVIGATION.map(({ name, href }) => (
          <a
            href={href}
            class="block px-4 py-3 text-ag-button-text font-ag-button-text text-text-primary hover:bg-surface-tertiary hover:text-primary-900 rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-primary-900 focus:ring-offset-2 focus:ring-offset-surface-secondary min-h-touch-md flex items-center"
            role="menuitem"
          >
            {name}
          </a>
        ))}
        
        <!-- Mobile CTA Button -->
        <div class="pt-4 border-t border-border-primary">
          <Button 
            variant="primary" 
            size="medium"
            fullWidth={true}
            href={`tel:${headerTexts.phone}`}
            ariaLabel={`Jetzt anrufen: ${headerTexts.phone}`}
            class="justify-center"
          >
            {headerTexts.buttonText}
          </Button>
        </div>
        
        <!-- Mobile Social Links -->
        <div class="pt-4 flex justify-center space-x-4">
          <a 
            href={headerTexts.socialLinks.facebook}
            target="_blank"
            rel="noopener noreferrer"
            class="w-touch-md h-touch-md flex items-center justify-center bg-surface-primary hover:bg-primary-50 rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-primary-900 focus:ring-offset-2 focus:ring-offset-surface-secondary"
            aria-label="Facebook Seite besuchen (öffnet in neuem Tab)"
          >
            <Icon icons={[{ name: "facebook" }]} size="small" variant="default" />
          </a>
          <a 
            href={headerTexts.socialLinks.instagram}
            target="_blank"
            rel="noopener noreferrer"
            class="w-touch-md h-touch-md flex items-center justify-center bg-surface-primary hover:bg-primary-50 rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-primary-900 focus:ring-offset-2 focus:ring-offset-surface-secondary"
            aria-label="Instagram Profil besuchen (öffnet in neuem Tab)"
          >
            <Icon icons={[{ name: "instagram" }]} size="small" variant="default" />
          </a>
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  // Enhanced mobile menu functionality with better UX
  document.addEventListener('DOMContentLoaded', function() {
    const toggleButton = document.querySelector('[data-collapse-toggle="navbar-cta"]') as HTMLButtonElement;
    const mobileMenu = document.getElementById('mobile-menu') as HTMLElement;
    
    if (toggleButton && mobileMenu) {
      toggleButton.addEventListener('click', function() {
        const isExpanded = toggleButton.getAttribute('aria-expanded') === 'true';
        const newExpandedState = !isExpanded;
        
        // Update ARIA state
        toggleButton.setAttribute('aria-expanded', newExpandedState.toString());
        
        // Update button label
        const label = newExpandedState ? 'Hauptmenü schließen' : 'Hauptmenü öffnen';
        toggleButton.setAttribute('aria-label', label);
        
        // Toggle menu visibility with animation
        if (newExpandedState) {
          mobileMenu.style.display = 'block';
          // Force reflow for animation
          mobileMenu.offsetHeight;
          mobileMenu.style.opacity = '1';
          mobileMenu.style.transform = 'translateY(0)';
        } else {
          mobileMenu.style.opacity = '0';
          mobileMenu.style.transform = 'translateY(-10px)';
          setTimeout(() => {
            mobileMenu.style.display = 'none';
          }, 300);
        }
        
        // Rotate hamburger icon
        const icon = toggleButton.querySelector('svg');
        if (icon) {
          icon.style.transform = newExpandedState ? 'rotate(90deg)' : 'rotate(0deg)';
        }
      });
      
      // Close menu when clicking outside
      document.addEventListener('click', function(event) {
        const target = event.target as Node;
        if (target && !toggleButton.contains(target) && !mobileMenu.contains(target)) {
          const isExpanded = toggleButton.getAttribute('aria-expanded') === 'true';
          if (isExpanded) {
            toggleButton.click();
          }
        }
      });
      
      // Close menu on escape key
      document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
          const isExpanded = toggleButton.getAttribute('aria-expanded') === 'true';
          if (isExpanded) {
            toggleButton.click();
            toggleButton.focus();
          }
        }
      });
      
      // Handle window resize
      window.addEventListener('resize', function() {
        if (window.innerWidth >= 768) { // md breakpoint
          mobileMenu.style.display = 'none';
          toggleButton.setAttribute('aria-expanded', 'false');
          toggleButton.setAttribute('aria-label', 'Hauptmenü öffnen');
          const icon = toggleButton.querySelector('svg');
          if (icon) {
            icon.style.transform = 'rotate(0deg)';
          }
        }
      });
    }
  });
</script>

<style>
  /* Enhanced mobile menu animations */
  #mobile-menu {
    opacity: 0;
    transform: translateY(-10px);
    transition: opacity 300ms ease-in-out, transform 300ms ease-in-out;
  }
  
  /* Improved focus indicators */
  button:focus-visible,
  a:focus-visible {
    outline: none;
  }
  
  /* Touch feedback for mobile */
  @media (hover: none) and (pointer: coarse) {
    button:active,
    a:active {
      transform: scale(0.98);
    }
  }
</style>
