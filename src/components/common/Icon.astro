---
interface IconData {
  name: string;
  href?: string;
  ariaLabel?: string;
  title?: string;
}

interface Props {
  icons: IconData[];
  size?: "tiny" | "small" | "medium" | "large" | "xl";
  customSize?: string;
  variant?: "default" | "light" | "accent";
}

const {
  icons = [],
  size = "medium",
  customSize,
  variant = "default",
} = Astro.props;

const sizes = {
  tiny: "text-xs",
  small: "text-sm",
  medium: "text-base",
  large: "text-lg",
  xl: "text-xl",
};

const iconClass = customSize ? customSize : sizes[size] || sizes.medium;

const iconMap: Record<string, string> = {
  facebook: "fab fa-facebook",
  twitter: "fab fa-twitter",
  instagram: "fab fa-instagram",
  linkedin: "fab fa-linkedin",
  youtube: "fab fa-youtube",
  phone: "fas fa-phone",
  mapMarker: "fas fa-map-marker-alt",
  clock: "fas fa-clock",
  smile: "fas fa-smile",
  handhelp: "fas fa-hand-holding-heart",
  bed: "fas fa-bed",
  utensils: "fas fa-utensils",
  "shield-alt": "fas fa-shield-alt",
  seedling: "fas fa-seedling",
  ambulance: "fas fa-ambulance",
  heart: "fas fa-heart",
  check: "fas fa-check",
  envelope: "fas fa-envelope",
  location: "fas fa-map-marker-alt",
  mobilePhone: "fas fa-mobile-alt",
  globe: "fas fa-globe",
  send: "fas fa-paper-plane",
  close: "fas fa-times",
};

const variantClasses = {
  default: "text-[#161616] hover:text-[#5a8bba]",
  light: "text-white hover:text-[#F2B98A]",
  accent: "text-[#F2B98A] hover:text-[#ffffff]",
};

// Default ARIA labels for common icons
const defaultAriaLabels: Record<string, string> = {
  facebook: "Facebook",
  twitter: "Twitter",
  instagram: "Instagram",
  linkedin: "LinkedIn",
  youtube: "YouTube",
  phone: "Telefon",
  mapMarker: "Standort",
  clock: "Öffnungszeiten",
  envelope: "E-Mail",
  globe: "Website",
  send: "Senden",
  close: "Schließen",
};
---

{
  icons.map((icon) => {
    const ariaLabel = icon.ariaLabel || defaultAriaLabels[icon.name] || icon.name;
    const title = icon.title || ariaLabel;
    
    const IconComponent = (
      <i
        class={`${iconMap[icon.name] || ""} ${iconClass} ${variantClasses[variant]} transition-colors duration-300`}
        aria-hidden="true"
        title={title}
      />
    );

    return icon.href ? (
      <a
        href={icon.href}
        class="inline-block focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded"
        target="_blank"
        rel="noopener noreferrer"
        aria-label={ariaLabel}
        title={title}
      >
        {IconComponent}
      </a>
    ) : (
      <span class="inline-block" aria-label={ariaLabel} title={title}>
        {IconComponent}
      </span>
    );
  })
}
