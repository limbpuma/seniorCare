---
interface Link {
  name: string;
  href: string;
}

interface Props {
  links: Link[];
  ariaLabel?: string;
  currentPath?: string;
}

const { links, ariaLabel = "Seitennavigation", currentPath } = Astro.props;
---

<nav aria-label={ariaLabel}>
  <ul
    class="flex flex-col font-medium p-4 md:p-0 mt-4 border border-gray-100 rounded-lg md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700"
    role="menubar"
  >
    {
      links.map(({ name, href }) => {
        const isCurrentPage = currentPath === href;
        return (
          <li role="none">
            <a
              class={`font-ag-button-text text-ag-button-text block py-2 px-3 rounded transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 ${
                isCurrentPage 
                  ? 'text-blue-700 bg-blue-50 md:bg-transparent md:text-blue-700 font-semibold' 
                  : 'text-black hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700'
              } md:p-0 md:dark:hover:text-blue-500 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700`}
              href={href}
              role="menuitem"
              aria-current={isCurrentPage ? 'page' : undefined}
            >
              {name}
            </a>
          </li>
        );
      })
    }
    }
  </ul>
</nav>
