---
interface Link {
  name: string;
  href: string;
  isAnchor?: boolean;
}

interface Props {
  links: Link[];
}

const { links } = Astro.props;
---

<nav>
  <ul
    class="flex flex-col font-medium p-4 md:p-0 mt-4 border border-gray-100 rounded-lg md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700"
  >
    {
      links.map(({ name, href, isAnchor }) => (
        <li>
          <a
            class="font-ag-button-text text-ag-button-text block py-2 px-3 text-black rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 md:dark:hover:text-blue-500 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700 nav-link"
            href={href}
            data-anchor={isAnchor ? "true" : undefined}
            aria-current="false"
          >
            {name}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<style>
  .nav-link.active {
    color: #0057b8;
    font-weight: bold;
    position: relative;
  }
  
  .nav-link.active::after {
    content: "";
    position: absolute;
    bottom: -3px;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: #0057b8;
    display: block;
  }
  
  @media (max-width: 768px) {
    .nav-link.active::after {
      bottom: 0;
    }
  }
</style>
