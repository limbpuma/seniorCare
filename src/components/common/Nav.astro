---
interface Link {
  name: string;
  href: string;
}

interface Props {
  links: Link[];
  ariaLabel?: string;
  currentPath?: string;
}

const { links, ariaLabel = "Seitennavigation", currentPath } = Astro.props;
---

<nav aria-label={ariaLabel}>
  <ul
    class="flex flex-col font-medium p-spacing-4 md:p-0 mt-spacing-4 border border-neutral-200 rounded-radius-lg md:space-x-spacing-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 transition-all duration-transition-normal"
    role="menubar"
  >
    {
      links.map(({ name, href }) => {
        const isCurrentPage = currentPath === href;
        return (
          <li role="none">
            <a
              class={`font-medium text-body block py-spacing-2 px-spacing-3 rounded-radius-md transition-all duration-transition-normal focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 touch-manipulation min-h-touch-sm ${
                isCurrentPage 
                  ? 'text-primary-600 bg-primary-50 md:bg-transparent md:text-primary-600 font-semibold border-b-2 border-primary-600 md:border-b-2' 
                  : 'text-neutral-700 hover:bg-neutral-100 md:hover:bg-transparent md:hover:text-primary-600 hover:scale-[1.02] active:scale-[0.98]'
              } md:py-spacing-3 md:px-spacing-4`}
              href={href}
              role="menuitem"
              aria-current={isCurrentPage ? 'page' : undefined}
            >
              {name}
            </a>
          </li>
        );
      })
    }
  </ul>
</nav>
